name: Deploy build

on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: windows-latest
    env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        EC2_INSTANCE_IP: ${{ secrets.EC2_HOST }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        EC2_PASSWORD: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
      

    - name: Create Build Directory
      run: mkdir _build
      
    - name: Restore Packages
      run: nuget restore mvc-app.sln

    - name: Build Solution
      run: |
        msbuild.exe mvc-app.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: MyAppBundle
        path: "./_build" 

    #- name: Connect to remote machine
    #  run: |
    #    net use X: \\ec2-54-160-125-179.compute-1.amazonaws.com\C$ /user:Administrator 9aB6=Jz5=ZhnBY3UnP.yc4gQCEhgOof&

    #- name: Copy folder to remote machine
    #  run: |
    #    xcopy "_build" X:\inetpub\wwwroot\testApp /E

    #- name: Disconnect from remote machine
    #  run: |
    #    net use X: /delete

    - name: Copy Build Directory to EC2
      run: |
        # Replace the following placeholders with your actual values:
        $localPath = "./_build" 
        $remotePath = "C:\inetpub\wwwroot\testApp"

        #$source = "C:\runner\actions-runner-win-x64-2.311.0\_work\mvc-app\_build"
        #$destination = "\\34.227.94.173\C:\inetpub\wwwroot\testApp"
        #$username = "Administrator"
        #$password = "9aB6=Jz5=ZhnBY3UnP.yc4gQCEhgOof&"

        # Build the Robocopy command as a string
        #$robocopyCommand = "robocopy `"$source`" `"$destination`" /e"

        # Start a new process to run the Robocopy command using cmd.exe
        #Start-Process -FilePath "cmd.exe" -ArgumentList "/c", $robocopyCommand -Credential (New-Object PSCredential -ArgumentList $username, (ConvertTo-SecureString $password -AsPlainText -Force))

        # You can also add -Wait to wait for the process to finish
        # Start-Process -FilePath "cmd.exe" -ArgumentList "/c", $robocopyCommand -Credential (New-Object PSCredential -ArgumentList $username, (ConvertTo-SecureString $password -AsPlainText -Force)) -Wait

        # Use Robocopy to copy the directory to the EC2 instance
        robocopy $localpath \\ec2-54-160-125-179.compute-1.amazonaws.com\$remotepath /user:administrator /password:9ab6=jz5=zhnby3unp.yc4gqcehgoof& /recurse
        net use z: "\\34.227.94.173\c$" /user:administrator 9ab6=jz5=zhnby3unp.yc4gqcehgoof&
        robocopy "./_build" z:\inetpub\wwwroot\testapp /mir
        net use z: /delete

        # Define the source directory and files to copy

        # Use xcopy to copy files to the remote destination with credentials
        #net use \34.227.94.173\IPC$ /user:Administrator 9aB6=Jz5=ZhnBY3UnP.yc4gQCEhgOof& && xcopy $localPath \34.227.94.173\C:\inetpub\wwwroot\testApp /E
        #$xcopyCommand = "xcopy $localPath $destination /E /I /Y /K /H /Z /O /X /V /R /U /S /user:Administrator /password:9aB6=Jz5=ZhnBY3UnP.yc4gQCEhgOof&"
        #Invoke-Expression -Command $xcopyCommand



        
        